#ifndef _MAZE_H
#define _MAZE_H

#include<iostream>
#include<cstdlib>
#include<ctime>

//----------------------------------------------------------------------------------------------------------------------
///@file maze.h
///@auther Qingyang Liu
///@version 3.1
///@date 5/5/16
///@class Maze
///@brief the class used to generate and manage the maze information
//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
/// @brief defined MAP_WIDTH as 50
//----------------------------------------------------------------------------------------------------------------------
#define MAP_WIDTH  50
//----------------------------------------------------------------------------------------------------------------------
/// @brief defined MAP_HEIGHT as 60
//----------------------------------------------------------------------------------------------------------------------
#define MAP_HEIGHT 60

class Maze
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief ctor for our Maze class
    //----------------------------------------------------------------------------------------------------------------------
    Maze(int _level);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function we use to create arrays to store maze information
    //----------------------------------------------------------------------------------------------------------------------
    void createWorldMap();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function we use to generate the maze information
    //----------------------------------------------------------------------------------------------------------------------
    void createMaze();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function we could call outside to access the x position
    //----------------------------------------------------------------------------------------------------------------------
    int getCoordX(void);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function we could call outside to access the y position
    //----------------------------------------------------------------------------------------------------------------------
    int getCoordY(void);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief a function for test use, printing the maze array in the shell to check the information
    //----------------------------------------------------------------------------------------------------------------------
    void print();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function allow us getting access to the array information
    /// detect are there any blocks on the WORLD MAP of the current position
    //----------------------------------------------------------------------------------------------------------------------
    inline int getMazeBlock(int x, int y) const {return worldMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function allow us getting access to the array information
    /// full MAP
    //----------------------------------------------------------------------------------------------------------------------
    inline int getFullBlock(int x, int y) const {return fullMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function allow us getting access to the array information
    /// OBSTACLE MAP
    //----------------------------------------------------------------------------------------------------------------------
    inline int getObstacleBlock(int x, int y) const {return obstacleMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function allow us getting access to the array information
    /// returning the central pivots of the obstacles
    //----------------------------------------------------------------------------------------------------------------------
    inline int getObstaclePos(int x, int y) const {return obstaclePosMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function allow us getting access to the array information
    /// returning the type number to distinguish between two kind of animated obstacles
    //----------------------------------------------------------------------------------------------------------------------
    //inline int getObstacleType(int x, int y) const {return obstacleTypeMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function allow us getting access to the array information
    /// EGG MAP
    //----------------------------------------------------------------------------------------------------------------------
    inline int getEggBlock(int x, int y) const {return eggMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function allow us getting access to the array information
    /// TURNING POINTS AND DIRRECTIONS
    /// TURNING MAP
    /// returning INT values
    //----------------------------------------------------------------------------------------------------------------------
    inline int getTurns(int x, int y) const {return turningMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function returns the total distance of the maze
    //----------------------------------------------------------------------------------------------------------------------
    inline int getTotalDistance() const {return distance;}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function returns the position of the cloud blocks
    //----------------------------------------------------------------------------------------------------------------------
    inline int getCloudBlock(int x, int y) const {return cloudMap[x][y];}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function changes egg taken to 0 on the map
    //----------------------------------------------------------------------------------------------------------------------
    void changeEggMap(int x, int y);

private:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief a parameter to add difficulties to the maze
    //----------------------------------------------------------------------------------------------------------------------
    int level;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the variable storing the distance of the maze
    //----------------------------------------------------------------------------------------------------------------------
    int distance;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, decides the basic shape
    //----------------------------------------------------------------------------------------------------------------------
    int worldMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, add more lines to the basic shape
    //----------------------------------------------------------------------------------------------------------------------
    int outerMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, 'the' basic shape
    //----------------------------------------------------------------------------------------------------------------------
    int fullMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, add the obstacles into the maze
    //----------------------------------------------------------------------------------------------------------------------
    int obstacleMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, marking the center pivot of the obstacles
    //----------------------------------------------------------------------------------------------------------------------
    int obstaclePosMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, marking the types of the obstacles
    //----------------------------------------------------------------------------------------------------------------------
    //int obstacleTypeMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, add the eggs into the maze
    //----------------------------------------------------------------------------------------------------------------------
    int eggMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, marks where to draw clouds above the maze
    //----------------------------------------------------------------------------------------------------------------------
    int cloudMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief an array which stores part of the maze information, marks all the turning points on the maze
    /// @brief an L on the map means turning to the left, the opposite of an R.
    //----------------------------------------------------------------------------------------------------------------------
    int turningMap[MAP_WIDTH][MAP_HEIGHT];
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to detect is it okay to make a turn
    /// @param int x is the x coordinate of the current position
    /// @param int y is the y coordinate of the current position
    //----------------------------------------------------------------------------------------------------------------------
    int detectTurn(int x, int y);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to protect the player from falling down the corner
    //----------------------------------------------------------------------------------------------------------------------
    void fillCorner();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to mark the position of obstacles on the map
    //----------------------------------------------------------------------------------------------------------------------
    void setObstacle();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to mark the position of cloud on the map
    //----------------------------------------------------------------------------------------------------------------------
    void setCloud();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to shuffle the type of obstacles to use
    /// @param int x is the current coordinate of the x axis
    /// @param int y is the current coordinate of the y axis
    //----------------------------------------------------------------------------------------------------------------------
    void shuffleObstacle(int x, int y);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to mark the position of obstacles on the map
    //----------------------------------------------------------------------------------------------------------------------
    void setEgg();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to generate the world map
    //----------------------------------------------------------------------------------------------------------------------
    void genWorldMap();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which uses to merge the worldmap and the outermap together
    //----------------------------------------------------------------------------------------------------------------------
    void genFullMap();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which changes the type of obstacles
    //----------------------------------------------------------------------------------------------------------------------
    void changeObstacleType();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which marks the goal zone on the map
    //----------------------------------------------------------------------------------------------------------------------
    void setGoalZone();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the function which calculate the total distance of the maze
    //----------------------------------------------------------------------------------------------------------------------
    void calculateDistance();

};

#endif
