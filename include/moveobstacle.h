#ifndef MOVEOBSTACLE
#define MOVEOBSTACLE
#include <ngl/Vec3.h>
#include <ngl/Transformation.h>
#include <ngl/Camera.h>
#include<ngl/ShaderLib.h>
#include <ngl/Obj.h>

//----------------------------------------------------------------------------------------------------------------------
///@file moveobstacle.h
///@auther Georgia Cook
///@version 1.0
///@date 5/6/16
///@class moveobstacle
///@brief the class used to generate moving obstacles
//----------------------------------------------------------------------------------------------------------------------

class MoveObstacle
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief ctor
    /// @param pos; position of obstacle
    /// @param _w; width of obstacle
    /// @param _h; height of obstacle
    /// @param _d; depth of obstacle
    //----------------------------------------------------------------------------------------------------------------------
    MoveObstacle(const ngl::Vec3 &_pos, GLfloat _w, GLfloat _h, GLfloat _d);

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns variables
    //----------------------------------------------------------------------------------------------------------------------
    inline ngl::Vec3 getPos() const {return m_pos;}
    inline ngl::Vec3 getOrigPos() const{return m_origPos;}
    inline ngl::Vec3 getMin() const {return m_min;}
    inline ngl::Vec3 getMax() const {return m_max;}

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief moves obstacles in the horizontal direction
    /// @param _x; units obstacle moves
    //----------------------------------------------------------------------------------------------------------------------
    void moveH(float _x);

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief moves obstacles in the vertical direction
    /// @param _z; units obstacle moves
    //----------------------------------------------------------------------------------------------------------------------
    void moveV(float _z);

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws obstacle
    /// @param _shaderName; name of shader to use
    /// @param _cam; camera being used
    /// @param _tx; transformation
    //----------------------------------------------------------------------------------------------------------------------
    void draw(const std::string &_shaderName, ngl::Camera *_cam);
    void loadMatricesToShader(ngl::Transformation &_tx, ngl::Camera *_cam )const;


private:
#ifdef WIN32
    std::shared_ptr<ngl::Obj>m_moveObMesh;
#else
    //----------------------------------------------------------------------------------------------------------------------
    ///@brief mesh of the obstacle
    //----------------------------------------------------------------------------------------------------------------------
    std::unique_ptr<ngl::Obj>m_moveObMesh;
#endif
    //----------------------------------------------------------------------------------------------------------------------
    ///@brief current position
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_pos;

    //----------------------------------------------------------------------------------------------------------------------
    ///@brief original starting position
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_origPos;

    //----------------------------------------------------------------------------------------------------------------------
    ///@brief transformation matrix
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Transformation m_transform;

    //----------------------------------------------------------------------------------------------------------------------
    ///@brief bools to change direction of movement
    //----------------------------------------------------------------------------------------------------------------------
    bool m_dirH;
    bool m_dirV;

    //----------------------------------------------------------------------------------------------------------------------
    ///@brief positons to draw collision boxes
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_min;
    ngl::Vec3 m_max;

    //----------------------------------------------------------------------------------------------------------------------
    ///@brief size, width, depth and height
    //----------------------------------------------------------------------------------------------------------------------
    GLfloat m_w;
    GLfloat m_h;
    GLfloat m_d;

};

#endif // MOVEOBSTACLE
